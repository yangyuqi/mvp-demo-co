apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wxjz.tenms_pad"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    //这里演示如何配置keystore,下面的keystore文件开发者可以自由替换, 一下配置的前提是开发者将keystore文件放在项目的根目录下.
//    signingConfigs {
//        debug {
//            storeFile file("/Users/a/.android/debug.keystore")
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
//        }
//
//        release {
//            storeFile file("$rootDir/debug.keystore")
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
//        }
//    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    annotationProcessor rootProject.ext.dependencies['arouter-compiler']
    implementation project(':module_base')
    implementation project(':module_aliyun')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
